[{"E:\\Development\\Mira\\senior-design-2020\\app\\src\\views\\ClientView.js":"1","E:\\Development\\Mira\\senior-design-2020\\app\\src\\views\\PracticeView.js":"2","E:\\Development\\Mira\\senior-design-2020\\app\\src\\App.js":"3","E:\\Development\\Mira\\senior-design-2020\\app\\src\\index.js":"4","E:\\Development\\Mira\\senior-design-2020\\app\\src\\views\\ExerciseForm.js":"5","E:\\Development\\Mira\\senior-design-2020\\app\\src\\views\\AssignmentForm.js":"6"},{"size":12038,"mtime":1613154771304,"results":"7","hashOfConfig":"8"},{"size":5525,"mtime":1613155417166,"results":"9","hashOfConfig":"8"},{"size":3131,"mtime":1612932965118,"results":"10","hashOfConfig":"8"},{"size":1139,"mtime":1612932965121,"results":"11","hashOfConfig":"8"},{"size":3965,"mtime":1612932965130,"results":"12","hashOfConfig":"8"},{"size":6167,"mtime":1612932965123,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},"5to84g",{"filePath":"17","messages":"18","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Development\\Mira\\senior-design-2020\\app\\src\\views\\ClientView.js",["27","28","29","30","31","32","33","34","35","36","37","38"],"import React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport { Component } from \"react\";\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport useState from 'react';\r\nimport { FormControl } from '@material-ui/core';\r\nimport '../css/ClientView.css';\r\nimport { MDBCard, MDBCardTitle } from \"mdbreact\";\r\nimport {Redirect,Switch} from 'react-router-dom';\r\nimport logo from '../Mira.jpg';\r\nimport {Row, Col, Container, Image, Card, Button} from 'react-bootstrap'\r\nimport Form from 'react-bootstrap/Form';\r\nimport picture from '../Bonelli-RECT.jpg';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {\r\n  CircularProgressbar,\r\n  CircularProgressbarWithChildren,\r\n  buildStyles\r\n} from \"react-circular-progressbar\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\nimport ProgressBar from 'react-bootstrap/ProgressBar';\r\n\r\nclass ClientView extends Component {\r\n  \r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        patient: {\r\n          name: props.location.data.name,\r\n          nextSession: '1/1/2021',\r\n          startDate: '1/1/2020',\r\n          assignments: [\r\n              {\r\n                  due: '11/17',\r\n                  status: 'Ongoing',\r\n                  exercises: [\r\n                  ]\r\n              }\r\n          ]\r\n        },\r\n\r\n      }\r\n      this.bubbleInfo = [\r\n        {\r\n          bubble1Percentage: 100,\r\n          bubble1Date: \"11/20\",\r\n          bubble2Percentage: 50,\r\n          bubble2Date: \"11/27\",\r\n          bubble3Percentage: 100,\r\n          bubble3Date: \"12/04\",\r\n          bubble4Percentage: 100,\r\n          bubble4Date: \"12/12\",\r\n          bubble5Percentage: 100,\r\n          bubble5Date: \"12/19\",\r\n          bubble6Percentage: 100,\r\n          bubble6Date: \"12/26\",\r\n          bubble7Percentage: 50,\r\n          bubble7Date: \"1/02\"\r\n        }\r\n      ]\r\n      this.clientInfo = [\r\n        {\r\n          picture: picture,\r\n          name: props.location.data.name, //Get this from previous page\r\n          clientSince: '11/10/19',\r\n          nextSession: '11/28'\r\n        }\r\n      ]\r\n    }\r\n\r\n    componentDidMount() {\r\n      fetch(\"http://localhost:3080/assignments/patient/PjohnDoe1\")\r\n          .then(res => res.json())\r\n          .then(data => {\r\n            data.sort((a, b) => b.visitNumber - a.visitNumber)\r\n            this.setState({patient: {assignments: data}})\r\n          });\r\n\r\n    }\r\n\r\n    render(){\r\n      const percentage = 66;\r\n      return(\r\n        <div>\r\n            <div className = \"App-logo-container\">\r\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n            </div>\r\n            <div className = \"Client-view-title-container\">\r\n                <p className = \"Client-view-title-text\">{this.state.patient.name}</p> {/*Get this from previous page*/}\r\n            </div>\r\n              \r\n            <Container fluid className = \"background-container\">\r\n              <Row className = \"background\">\r\n                <div className = \"Client-information-container\">\r\n                  <Col>\r\n                    <ClientInfo  clientInfo={this.clientInfo} />\r\n                  </Col>\r\n                </div>\r\n                {/*<Col>\r\n                  <MDBCard className=\"Exercise-preview-body\">\r\n                    <MDBCardTitle className=\"Exercise-preview-placeholder-text\">-Exercise Preview-</MDBCardTitle>\r\n                  </MDBCard>         \r\n                </Col>*/} \r\n                <Col>\r\n                      <Row>\r\n                      </Row>\r\n                      <Row>\r\n                          <Col>\r\n                          <Card className=\"Assignment-completion-body\">\r\n                              <Card.Body>\r\n                                  <Row>\r\n                                      <Col>\r\n                                        <div className = \"Assignment-completion-status-text-container\">\r\n                                          <MDBCardTitle className=\"Assignment-completion-status-text\">{this.state.patient.assignments[0].status}</MDBCardTitle> {/*Get this from patient data*/}\r\n                                        </div>\r\n                                      </Col>\r\n                                      <Col>\r\n                                        <div className = \"Assignment-due-date-container\">\r\n                                          <MDBCardTitle className=\"Assignment-due-date-text\">Due: <u>{this.state.patient.assignments[0].due}</u> </MDBCardTitle> {/*Get this from patient data*/}\r\n                                        </div>\r\n                                      </Col>\r\n                                       \r\n                                  </Row>\r\n                                  <Row>\r\n                                      <Col>\r\n                                        <div className = \"Assignment-progress-container\">\r\n                                          <MDBCardTitle className=\"Assignment-completion-title-text\">Assignment Completion</MDBCardTitle>\r\n                                          <div className=\"Exercise-data-container\">\r\n                                            {getExercises(this.state.patient.assignments[0].exerciseList)}\r\n                                          </div>\r\n                                        </div>\r\n                                      </Col>\r\n                                  </Row>\r\n                              </Card.Body>\r\n                          </Card>\r\n                          </Col>\r\n                      </Row> \r\n                  \r\n                  <Row>\r\n                    {/*<MDBCard className=\"Assignment\">\r\n                      <div className = \"\">\r\n                        <MDBCardTitle className=\"t\">Ongoing</MDBCardTitle> {/*Get this from patient data}\r\n                      </div>\r\n                    </MDBCard> */}\r\n                    <BubbleInfo bubbleInfo={this.bubbleInfo} />\r\n                    \r\n                  </Row>        \r\n                </Col>\r\n              </Row>\r\n            </Container> \r\n       </div>\r\n       )\r\n    }\r\n  }\r\n\r\nclass ClientInfo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.clientInfo = props.clientInfo;\r\n  }\r\n\r\n  getClientInfo(clientInfo) {\r\n    const result = clientInfo.map((client) =>\r\n      <Row>\r\n        <MDBCard className = \"Client-information\">\r\n          <Image src={picture} roundedCircle className=\"picture\"/>\r\n          <div className=\"clientInfoCardContainer\">\r\n            <p className=\"clientInfoCard\">{client.name}</p>\r\n            <p className=\"clientInfoCard\">Client Since: {client.clientSince}</p>\r\n            <p className=\"clientInfoCard\">Next Session: {client.nextSession}</p>\r\n          </div>\r\n        </MDBCard>\r\n      </Row>\r\n    );\r\n    return result;\r\n  }\r\n  \r\n  render() {\r\n    return(this.getClientInfo(this.clientInfo))\r\n  }\r\n}\r\n\r\nclass BubbleInfo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.bubbleInfo = props.bubbleInfo;\r\n  }\r\n  getBubbleInfo(bubbleInfo) {\r\n    const result = bubbleInfo.map((bubbles) =>\r\n        <div className = \"Progress-bubbles-container\">\r\n          <CircularProgressbar className = \"Progress-bubbles\" value={bubbles.bubble1Percentage}\r\n            text={`${bubbles.bubble1Date}`}\r\n            background\r\n            backgroundPadding={6}\r\n            styles={buildStyles({\r\n              backgroundColor: \"#2F9C3A\",\r\n              textColor: \"#fff\",\r\n              pathColor: \"transparent\",\r\n              trailColor: \"transparent\"\r\n            })} />\r\n                \r\n          <CircularProgressbar className = \"Progress-bubbles\" value={bubbles.bubble2Percentage}\r\n            text={`${bubbles.bubble2Date}`}\r\n            background\r\n            backgroundPadding={6}\r\n            styles={buildStyles({\r\n              backgroundColor: \"#EB5050\",\r\n              textColor: \"#fff\",\r\n              pathColor: \"transparent\",\r\n              trailColor: \"transparent\"\r\n            })} />\r\n\r\n            <CircularProgressbar className = \"Progress-bubbles\" value={bubbles.bubble3Percentage}\r\n              text={`${bubbles.bubble3Date}`}\r\n              background\r\n              backgroundPadding={6}\r\n              styles={buildStyles({\r\n                backgroundColor: \"#2F9C3A\",\r\n                textColor: \"#fff\",\r\n                pathColor: \"transparent\",\r\n                trailColor: \"transparent\"\r\n            })} />\r\n\r\n            <CircularProgressbar className = \"Progress-bubbles\" value={bubbles.bubble4Percentage}\r\n              text={`${bubbles.bubble4Date}`}\r\n              background\r\n              backgroundPadding={6}\r\n              styles={buildStyles({\r\n                backgroundColor: \"#2F9C3A\",\r\n                textColor: \"#fff\",\r\n                pathColor: \"transparent\",\r\n                trailColor: \"transparent\"\r\n            })} />\r\n            <CircularProgressbar className = \"Progress-bubbles\" value={bubbles.bubble5Percentage}\r\n              text={`${bubbles.bubble5Date}`}\r\n              background\r\n              backgroundPadding={6}\r\n              styles={buildStyles({\r\n                backgroundColor: \"#2F9C3A\",\r\n                textColor: \"#fff\",\r\n                pathColor: \"transparent\",\r\n                trailColor: \"transparent\"\r\n            })} />\r\n            <CircularProgressbar className = \"Progress-bubbles\" value={bubbles.bubble6Percentage}\r\n              text={`${bubbles.bubble6Date}`}\r\n              background\r\n              backgroundPadding={6}\r\n              styles={buildStyles({\r\n                backgroundColor: \"#2F9C3A\",\r\n                textColor: \"#fff\",\r\n                pathColor: \"transparent\",\r\n                trailColor: \"transparent\"\r\n            })} />\r\n            <CircularProgressbar className = \"Progress-bubbles\" value={bubbles.bubble7Percentage}\r\n              text={`${bubbles.bubble7Date}`}\r\n              background\r\n              backgroundPadding={6}\r\n              styles={buildStyles({\r\n                backgroundColor: \"#3e98c7\",\r\n                textColor: \"#fff\",\r\n                pathColor: \"transparent\",\r\n                trailColor: \"transparent\"\r\n            })} />\r\n        </div>\r\n    );\r\n    return result;\r\n  }\r\n  render() {\r\n    return(this.getBubbleInfo(this.bubbleInfo))\r\n  }\r\n}\r\n\r\n function getExercises(exercises) {\r\n      if (exercises){\r\n      const result = exercises.map((exercise) =>\r\n      <div className = \"Exercise-data\">\r\n        <Row>\r\n            <Col>\r\n              <ProgressBar variant = {exercise.completionStatus} now = {exercise.completionAmount}/>\r\n            </Col>\r\n            <Col>\r\n                <p>{exercise.name}</p>\r\n                <p>Due: {exercise.due}</p>\r\n            </Col>\r\n          </Row>\r\n      </div>\r\n      );\r\n      return result;\r\n      }\r\n    }\r\n\r\n\r\n  //#region Exercise Type Dropdown\r\n  const CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\r\n    <a\r\n      href=\"./ClientView\"\r\n      ref={ref}\r\n      onClick={(e) => {\r\n        e.preventDefault();\r\n        onClick(e);\r\n      }}\r\n    >\r\n      {children}\r\n      &#x25bc;\r\n    </a>\r\n  ));\r\n\r\n  const CustomMenu = React.forwardRef(\r\n    ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\r\n      const [value, setValue] = useState('');\r\n  \r\n      return (\r\n        <div\r\n          ref={ref}\r\n          style={style}\r\n          className={className}\r\n          aria-labelledby={labeledBy}\r\n        >\r\n          <FormControl\r\n            autoFocus\r\n            className=\"mx-3 my-2 w-auto\"\r\n            placeholder=\"Type to filter...\"\r\n            onChange={(e) => setValue(e.target.value)}\r\n            value={value}\r\n          />\r\n          <ul className=\"list-unstyled\">\r\n            {React.Children.toArray(children).filter(\r\n              (child) =>\r\n                !value || child.props.children.toLowerCase().startsWith(value),\r\n            )}\r\n          </ul>\r\n        </div>\r\n      );\r\n    },\r\n  );\r\n//#endregion  \r\n\r\n\r\nexport default ClientView;","E:\\Development\\Mira\\senior-design-2020\\app\\src\\views\\PracticeView.js",["39","40","41","42"],"E:\\Development\\Mira\\senior-design-2020\\app\\src\\App.js",["43","44"],"E:\\Development\\Mira\\senior-design-2020\\app\\src\\index.js",["45"],"E:\\Development\\Mira\\senior-design-2020\\app\\src\\views\\ExerciseForm.js",[],"E:\\Development\\Mira\\senior-design-2020\\app\\src\\views\\AssignmentForm.js",["46","47","48"],{"ruleId":"49","severity":1,"message":"50","line":2,"column":8,"nodeType":"51","messageId":"52","endLine":2,"endColumn":16},{"ruleId":"49","severity":1,"message":"53","line":4,"column":8,"nodeType":"51","messageId":"52","endLine":4,"endColumn":16},{"ruleId":"49","severity":1,"message":"54","line":5,"column":8,"nodeType":"51","messageId":"52","endLine":5,"endColumn":22},{"ruleId":"49","severity":1,"message":"55","line":10,"column":9,"nodeType":"51","messageId":"52","endLine":10,"endColumn":17},{"ruleId":"49","severity":1,"message":"56","line":10,"column":18,"nodeType":"51","messageId":"52","endLine":10,"endColumn":24},{"ruleId":"49","severity":1,"message":"57","line":12,"column":43,"nodeType":"51","messageId":"52","endLine":12,"endColumn":49},{"ruleId":"49","severity":1,"message":"58","line":13,"column":8,"nodeType":"51","messageId":"52","endLine":13,"endColumn":12},{"ruleId":"49","severity":1,"message":"59","line":15,"column":10,"nodeType":"51","messageId":"52","endLine":15,"endColumn":20},{"ruleId":"49","severity":1,"message":"60","line":21,"column":3,"nodeType":"51","messageId":"52","endLine":21,"endColumn":34},{"ruleId":"49","severity":1,"message":"61","line":86,"column":13,"nodeType":"51","messageId":"52","endLine":86,"endColumn":23},{"ruleId":"49","severity":1,"message":"62","line":298,"column":9,"nodeType":"51","messageId":"52","endLine":298,"endColumn":21},{"ruleId":"49","severity":1,"message":"63","line":312,"column":9,"nodeType":"51","messageId":"52","endLine":312,"endColumn":19},{"ruleId":"49","severity":1,"message":"64","line":10,"column":8,"nodeType":"51","messageId":"52","endLine":10,"endColumn":22},{"ruleId":"49","severity":1,"message":"55","line":14,"column":10,"nodeType":"51","messageId":"52","endLine":14,"endColumn":18},{"ruleId":"65","severity":1,"message":"66","line":72,"column":7,"nodeType":"51","messageId":"67","endLine":72,"endColumn":19},{"ruleId":"68","severity":1,"message":"69","line":79,"column":51,"nodeType":"70","messageId":"71","endLine":79,"endColumn":53},{"ruleId":"49","severity":1,"message":"72","line":6,"column":8,"nodeType":"51","messageId":"52","endLine":6,"endColumn":13},{"ruleId":"49","severity":1,"message":"73","line":9,"column":19,"nodeType":"51","messageId":"52","endLine":9,"endColumn":30},{"ruleId":"49","severity":1,"message":"74","line":4,"column":8,"nodeType":"51","messageId":"52","endLine":4,"endColumn":11},{"ruleId":"49","severity":1,"message":"73","line":4,"column":19,"nodeType":"51","messageId":"52","endLine":4,"endColumn":30},{"ruleId":"49","severity":1,"message":"75","line":4,"column":58,"nodeType":"51","messageId":"52","endLine":4,"endColumn":69},{"ruleId":"76","severity":1,"message":"77","line":49,"column":21,"nodeType":"78","messageId":"71","endLine":49,"endColumn":37},"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'Dropdown' is defined but never used.","'DropdownButton' is defined but never used.","'Redirect' is defined but never used.","'Switch' is defined but never used.","'Button' is defined but never used.","'Form' is defined but never used.","'useHistory' is defined but never used.","'CircularProgressbarWithChildren' is defined but never used.","'percentage' is assigned a value but never used.","'CustomToggle' is assigned a value but never used.","'CustomMenu' is assigned a value but never used.","'bonelliPicture' is defined but never used.","no-func-assign","'patientClick' is a function.","isAFunction","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'axios' is defined but never used.","'MDBCardBody' is defined but never used.","'App' is defined but never used.","'MDBCardText' is defined but never used.","no-dupe-keys","Duplicate key 'completionAmount'.","ObjectExpression"]