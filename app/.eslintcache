[{"E:\\Development\\Mira\\senior-design-2020\\app\\src\\views\\ClientView.js":"1","E:\\Development\\Mira\\senior-design-2020\\app\\src\\views\\PracticeView.js":"2"},{"size":12040,"mtime":1613010542504,"results":"3","hashOfConfig":"4"},{"size":5257,"mtime":1613007788394,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"5to84g",{"filePath":"8","messages":"9","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"E:\\Development\\Mira\\senior-design-2020\\app\\src\\views\\ClientView.js",["11","12","13","14","15","16","17","18","19"],"E:\\Development\\Mira\\senior-design-2020\\app\\src\\views\\PracticeView.js",["20","21"],"import React from \"react\";\r\nimport green from '../Green.PNG';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Card from 'react-bootstrap/Card'\r\nimport { Component } from \"react\";\r\nimport bonelliPicture from '../Bonelli-RECT.jpg';\r\nimport acasterPicture from '../james-acaster.jpg'\r\nimport Image from 'react-bootstrap/Image';\r\nimport { Link } from \"react-router-dom\";\r\nimport '../css/PracticeView.css'\r\n\r\n\r\nfunction patientClick(patient) {\r\n  this.setState(() => ({\r\n    selectedPatient: patient\r\n  }));\r\n}\r\n\r\n  class PracticeView extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { selectedPatient: {\r\n                    name: '',\r\n                    trackedSymptoms: 0,\r\n                    groundingExercises: 0,\r\n                    assignments: [],\r\n                    } };\r\n      this.listItems = []\r\n      this.therapist = {\r\n        name: 'Miranda Cosgrove',\r\n        nextSession: '11/19',\r\n        status: 'Ongoing',\r\n      }\r\n      this.patients = [\r\n        {\r\n          name: 'James Acaster',\r\n          trackedSymptoms: 3,\r\n          groundingExercises: 5,\r\n          assignments: [true, true],\r\n        },\r\n        {\r\n          name: 'Eduardo Bonelli',\r\n          trackedSymptoms: 3,\r\n          groundingExercises: 5,\r\n          assignments: [true, false],\r\n        },\r\n        {\r\n          name: 'George Bush',\r\n          trackedSymptoms: 3,\r\n          groundingExercises: 5,\r\n          assignments: [true, false],\r\n        },\r\n        {\r\n          name: 'Craig Ferguson',\r\n          trackedSymptoms: 3,\r\n          groundingExercises: 5,\r\n          assignments: [true, false],\r\n        },\r\n        {\r\n          name: 'Scooby Doo',\r\n          trackedSymptoms: 3,\r\n          groundingExercises: 5,\r\n          assignments: [true, false],\r\n        }\r\n      ];\r\n\r\n      patientClick = patientClick.bind(this);\r\n\r\n    }\r\n\r\n    render(){\r\n      return(\r\n        <div>\r\n          <Container className = \"Profile\">\r\n            <Row>\r\n              <Col>\r\n                <div className = \"border\">\r\n                  <div className = \"Profile-info\">\r\n                    <Row className = \"Name-Row justify-content-md-center\">\r\n                      <Image src={acasterPicture} roundedCircle className=\"picture\"/>\r\n                    </Row>\r\n                    <Row className = \"Name-Row justify-content-md-center\">\r\n                      <Card className = \"Name-Card\">{this.therapist.name}</Card>\r\n                    </Row>\r\n                    <Row className= \"Name-Row justify-content-md-center\">\r\n                      <Card className = \"Next-Session-Date\">{this.therapist.nextSession}</Card>\r\n                    </Row>\r\n                    <Row className = \"Name-Row justify-content-md-center\">\r\n                      <Card className = \"Status\">{this.therapist.status}</Card>\r\n                    </Row>\r\n                    <Row className = \"Name-Row justify-content-md-center\">\r\n                      <Link to = {{\r\n                          pathname: \"/ClientView\",\r\n                          data: {name: this.state.selectedPatient.name} // your data array of objects\r\n                        }}><Button variant=\"info\" className = \"Client-View-Button\">Go To Client View</Button></Link>\r\n                    </Row> \r\n                  </div>  \r\n                </div>             \r\n              </Col>\r\n              \r\n              <Col xs={8}>\r\n                <h1 className = \"Practice-view-title\">Practice View</h1>\r\n                <Table className = \"Table\">\r\n                <tbody>\r\n                  <TableRow className = \"Patients\" patients = {this.patients} />\r\n                </tbody>\r\n                </Table>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n          \r\n          {/* <NumberList numbers = {this.numbers} /> */}\r\n        </div>\r\n      )\r\n    }\r\n  };\r\n      \r\nclass TableRow extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.patients = props.patients;\r\n  }\r\n\r\n  getRow(patients) {\r\n    const rowItems = patients.map((patient) =>\r\n      <tr onClick = {() => patientClick(patient)}>\r\n        <td className = \"Patient-name\" >Client: {patient.name}</td>\r\n        <p className = \"Tab\"></p>\r\n        <td className = \"Tracked-symptoms\">Tracked Symptoms {patient.trackedSymptoms} times</td>\r\n        <p className = \"Tab\"></p>\r\n        <td className = \"Exercise-use\">Grounding Exercises used {patient.groundingExercises} times</td>\r\n        <p className = \"Tab\"></p>\r\n        <td className = \"Completion\">Completed {this.getCompleted(patient.assignments)}/{patient.assignments.length} homework assignments</td>\r\n        <p className = \"Tab\"></p>\r\n        <td className = \"Completion-indicator\"><Image src={green} Green/></td>\r\n        \r\n      </tr>\r\n    );\r\n    return rowItems;\r\n  } \r\n\r\n  getCompleted(assignments) {\r\n    let count = 0;\r\n    for (let assignment of assignments) {\r\n      if (assignment) {\r\n        count++;\r\n      }\r\n    }\r\n    return count;\r\n  }\r\n\r\n  render() {\r\n    return(this.getRow(this.patients))\r\n  }\r\n\r\n};\r\nexport default PracticeView",{"ruleId":"22","severity":1,"message":"23","line":2,"column":8,"nodeType":"24","messageId":"25","endLine":2,"endColumn":16},{"ruleId":"22","severity":1,"message":"26","line":4,"column":8,"nodeType":"24","messageId":"25","endLine":4,"endColumn":16},{"ruleId":"22","severity":1,"message":"27","line":5,"column":8,"nodeType":"24","messageId":"25","endLine":5,"endColumn":22},{"ruleId":"22","severity":1,"message":"28","line":11,"column":43,"nodeType":"24","messageId":"25","endLine":11,"endColumn":49},{"ruleId":"22","severity":1,"message":"29","line":12,"column":8,"nodeType":"24","messageId":"25","endLine":12,"endColumn":12},{"ruleId":"22","severity":1,"message":"30","line":19,"column":3,"nodeType":"24","messageId":"25","endLine":19,"endColumn":34},{"ruleId":"22","severity":1,"message":"31","line":82,"column":13,"nodeType":"24","messageId":"25","endLine":82,"endColumn":23},{"ruleId":"22","severity":1,"message":"32","line":302,"column":9,"nodeType":"24","messageId":"25","endLine":302,"endColumn":21},{"ruleId":"22","severity":1,"message":"33","line":316,"column":9,"nodeType":"24","messageId":"25","endLine":316,"endColumn":19},{"ruleId":"22","severity":1,"message":"34","line":10,"column":8,"nodeType":"24","messageId":"25","endLine":10,"endColumn":22},{"ruleId":"35","severity":1,"message":"36","line":71,"column":7,"nodeType":"24","messageId":"37","endLine":71,"endColumn":19},"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'Dropdown' is defined but never used.","'DropdownButton' is defined but never used.","'Button' is defined but never used.","'Form' is defined but never used.","'CircularProgressbarWithChildren' is defined but never used.","'percentage' is assigned a value but never used.","'CustomToggle' is assigned a value but never used.","'CustomMenu' is assigned a value but never used.","'bonelliPicture' is defined but never used.","no-func-assign","'patientClick' is a function.","isAFunction"]